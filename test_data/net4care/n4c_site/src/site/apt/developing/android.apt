 -----
 The Net4Care Ecosystem Platform
 -----
 Net4Care
 -----

Developing on Android - a first client

* Prequisites
~~~~~~~~~~~~~~~

  You must have Android (APK and Eclipse plugin) installed. We also
  assume that you have completed the {{{./../gettingstarted/hello.html}Hello, World!
  tutorial}}.

* Overview
~~~~~~~~~~~~~~~

  The JARs created by the Net4Care archetype (as in the Hello, World!
  spirometry tutorial) may be used in an Android application. The
  present tutorial explains how to create an Android client to replace
  the client generated by the Net4Care archetype.

* Steps
~~~~~~~~~~~~~~~

** 1. Create an Android application
~~~~~~~~~~~~~~~

  Create an Android application (e.g., "n4c_android") in Eclipse with
  an Activity for creating and sending spirometry measurements (e.g.,
  "Spirometry").

** 2. Add Net4Care and spirometry JARs
~~~~~~~~~~~~~~~
  You will need to add the following JARs as library dependencies:

  * n4c_observation (from the Net4Care platform)

  * n4c_serializer  (from the Net4Care platform)

  * n4c_forwarder (from the Net4Care platform)

  * n4c_data (from the spirometry tutorial)

 []

  To add one of these JARs, the recommended way is to (in Properties
  -> Java Build Path -> Add Variable...) to Extend... the M2_REPO
  environment variable (cf. the {{{./../gettingstarted/hello.html#eclipse}Eclipse Maven
  setup}}) to point to JARs in your local Maven repository.

** 3. Implement the Spirometry activity
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Create functionality for inputting and sending a spirometry
  measurement. The following screenshot shows a possible activity layout:

[./../images/first-android.png]

  In this activity, the following OnClickListener will send data to
  the server, receive echo data, and write the data into the Android
  activity log:

+--------------------------------------+
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        ((Button) findViewById(R.id.button1)).setOnClickListener(new OnClickListener() {
          @Override
          public void onClick(View v) {
            try {
              Serializer serializer = new JacksonJSONSerializer(); 
              StandardTeleObservation observation = defineSpirometryObservation();
              StandardDataUploader dataUploader = new StandardDataUploader(serializer, 
                  new HttpConnector("http://10.0.2.2:8080/observation"));
              FutureResult result = dataUploader.upload(observation);
              result.awaitUninterruptibly();
            } catch (IOException e) {
              e.printStackTrace();
            }
          }
        });
    }
+--------------------------------------+

  (Here, defineSpirometryObservation() is defined similarly to N4CClientTest.defineSpirometryObservation().)

** 4. Run the spirometry application
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  To run the application, you need to first run the spirometry server:

+--------------------------------------+
  cd n4c_server
  mvn pax:provision
+--------------------------------------+

  and, secondly, run the Android application from Eclipse. The code
  above assumes (because of the URL) that the Android application is
  run in an emulator running on the same computer as the server.

  Finally, you may inspect the log in the DDMS perspective in Eclipse
  to ensure that data was sent and received correctly.
